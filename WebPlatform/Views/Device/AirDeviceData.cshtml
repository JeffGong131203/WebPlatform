
@{
    ViewBag.Title = "空气传感器";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Guid devID = ViewBag.DevID;
    System.Collections.ArrayList retArray = ViewBag.retArray;
    System.Collections.ArrayList dataList = ViewBag.dataList;

    WebPlatform.Models.WebPlatformContext db = new WebPlatform.Models.WebPlatformContext();

    WebPlatform.Models.Device_Info devInfo = db.Device_Info.Find(devID);

    Dictionary<string, string> devDic = Newtonsoft.Json.JsonConvert.DeserializeObject<Dictionary<string, string>>(devInfo.PropertyJson);

    //实时数据处理
    string pm25 = string.Empty;
    string tmp = string.Empty;
    string wet = string.Empty;
    string co2 = string.Empty;
    string tvoc = string.Empty;

    if (retArray.Count > 0)
    {
        pm25 = retArray[0].ToString();
        tmp = (Convert.ToDecimal(retArray[1]) / 10).ToString();
        wet = retArray[2].ToString();
        co2 = retArray[3].ToString();
        tvoc = retArray[4].ToString();
    }

    //图表数据处理
    string[] pm25List = new string[50];
    string[] tmpList = new string[50];
    string[] wetList = new string[50];
    string[] co2List = new string[50];
    string[] tvocList = new string[50];
    string[] dateList = new string[50];

    if (dataList.Count <= 50)
    {
        for (int i = dataList.Count - 1; i >= 0; i--)
        {
            System.Collections.ArrayList arr = (System.Collections.ArrayList)dataList[i];

            dateList[i] = arr[0].ToString();
            pm25List[i] = arr[1].ToString();
            tmpList[i] = (Convert.ToDecimal(arr[2]) / 10).ToString();
            wetList[i] = arr[3].ToString();
            co2List[i] = arr[4].ToString();
            tvocList[i] = arr[5].ToString();
        }
    }
    else
    {
        for (int i = 49; i >= 0; i--)
        {
            System.Collections.ArrayList arr = (System.Collections.ArrayList)dataList[i];

            dateList[i] = arr[0].ToString();
            pm25List[i] = arr[1].ToString();
            tmpList[i] = (Convert.ToDecimal(arr[2]) / 10).ToString();
            wetList[i] = arr[3].ToString();
            co2List[i] = arr[4].ToString();
            tvocList[i] = arr[5].ToString();
        }
    }

    string dateJson = Newtonsoft.Json.JsonConvert.SerializeObject(dateList, Newtonsoft.Json.Formatting.Indented);
    string tmpJson = Newtonsoft.Json.JsonConvert.SerializeObject(tmpList, Newtonsoft.Json.Formatting.Indented);
    string pm25Json = Newtonsoft.Json.JsonConvert.SerializeObject(pm25List, Newtonsoft.Json.Formatting.Indented);
    string wetJson = Newtonsoft.Json.JsonConvert.SerializeObject(wetList, Newtonsoft.Json.Formatting.Indented);
    string co2Json = Newtonsoft.Json.JsonConvert.SerializeObject(co2List, Newtonsoft.Json.Formatting.Indented);
    string tvocJson = Newtonsoft.Json.JsonConvert.SerializeObject(tvocList, Newtonsoft.Json.Formatting.Indented);


}

<h1>
    空气传感器
    <small>@devDic["DevCusName"]</small>
</h1>
<div class="row">
    <div class="col-sm-1">
        <a href="@Url.Action("List","Device",new { DevType = "air"})"><button type="button" class="btn btn-block btn-info">返回</button></a>
    </div>
</div>
<br />
<br />
<!-- Small boxes (Stat box) -->
<div class="row">
    <div class="col-lg-3 col-xs-6">
        <!-- small box -->
        <div class="small-box bg-yellow">
            <div class="inner">
                <h3>@pm25</h3>
                <p>PM 2.5</p>
            </div>
            <div class="icon">
                <i class="ion ion-bag"></i>
            </div>
            @*<a href="#" class="small-box-footer"> <i class="fa fa-arrow-circle-right"></i></a>*@
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-xs-6">
        <!-- small box -->
        <div class="small-box bg-green">
            <div class="inner">
                <h3>@tmp</h3>
                <p>温度</p>
            </div>
            <div class="icon">
                <i class="ion ion-stats-bars"></i>
            </div>
            @*<a href="#" class="small-box-footer"><i class="fa fa-arrow-circle-right"></i></a>*@
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-xs-6">
        <!-- small box -->
        <div class="small-box bg-aqua">
            <div class="inner">
                <h3>@wet</h3>
                <p>湿度</p>
            </div>
            <div class="icon">
                <i class="ion ion-waterdrop"></i>
            </div>
            @*<a href="#" class="small-box-footer"><i class="fa fa-arrow-circle-right"></i></a>*@
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-xs-6">
        <!-- small box -->
        <div class="small-box bg-purple">
            <div class="inner">
                <h3>@co2</h3>
                <p>二氧化碳</p>
            </div>
            <div class="icon">
                <i class="ion ion-pie-graph"></i>
            </div>
            @*<a href="#" class="small-box-footer"> <i class="fa fa-arrow-circle-right"></i></a>*@
        </div>
    </div>
    <!-- ./col -->
    <!-- ./col -->
    <div class="col-lg-3 col-xs-6">
        <!-- small box -->
        <div class="small-box bg-red">
            <div class="inner">
                <h3>@tvoc</h3>
                <p>甲醛</p>
            </div>
            <div class="icon">
                <i class="ion ion-pie-graph"></i>
            </div>
            @*<a href="#" class="small-box-footer"> <i class="fa fa-arrow-circle-right"></i></a>*@
        </div>
    </div>
    <!-- ./col -->
</div>


<div class="row">
    <div class="col-md-6">
        <!-- LINE CHART -->
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">温度</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="tmpChart" style="height:250px"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        <!-- BAR CHART -->
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">PM2.5</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="pm25Chart" style="height:230px"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
    <!-- /.col (LEFT) -->
    <div class="col-md-6">
        <!-- BAR CHART -->
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">湿度</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="wetChart" style="height:230px"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        <!-- AREA CHART -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">二氧化碳、甲醛</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="co2TvocChart" style="height:250px"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
    <!-- /.col (RIGHT) -->
</div>


<script>
    $(function () {
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //-----------------------------
        //- AREA CHART 二氧化碳、甲醛 -
        //-----------------------------

        // Get context with jQuery - using jQuery's .get() method.
        var co2TvocChartCanvas = $('#co2TvocChart').get(0).getContext('2d')
        // This will get the first returned node in the jQuery collection.
        var co2TvocAreaChart = new Chart(co2TvocChartCanvas)

        var co2TvocAreaChartData = {
            labels: @Html.Raw(dateJson),
            datasets: [
                {
                    label: '二氧化碳',
                    fillColor: 'rgba(210, 214, 222, 1)',
                    strokeColor: 'rgba(210, 214, 222, 1)',
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: @Html.Raw(co2Json)
                },
                {
                    label: '甲醛',
                    fillColor: 'rgba(60,141,188,0.9)',
                    strokeColor: 'rgba(60,141,188,0.8)',
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: @Html.Raw(tvocJson)
                }
            ]
        }

        var co2TvocAreaChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        }

        //Create the line chart
        co2TvocAreaChart.Line(co2TvocAreaChartData, co2TvocAreaChartOptions)

        //-------------------
        //- Line CHART 温度 -
        //-------------------
        var tmpChartData = {
            labels: @Html.Raw(dateJson),
            datasets: [
                {
                    label: '温度',
                    fillColor: 'rgba(210, 214, 222, 1)',
                    strokeColor: 'rgba(210, 214, 222, 1)',
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: @Html.Raw(tmpJson)
                }
            ]
        }


        var tmpChartCanvas = $('#tmpChart').get(0).getContext('2d')
        var tmpChart = new Chart(tmpChartCanvas)
        var tmpChartOptions = co2TvocAreaChartOptions
        tmpChartOptions.datasetFill = false
        tmpChart.Line(tmpChartData, tmpChartOptions)


        //------------------
        //- BAR CHART 湿度 -
        //------------------
        var wetBarChartData = {
            labels: @Html.Raw(dateJson),
            datasets: [
                {
                    label: '湿度',
                    fillColor: 'rgba(210, 214, 222, 1)',
                    strokeColor: 'rgba(210, 214, 222, 1)',
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: @Html.Raw(wetJson)
                }
            ]
        }


        var wetChartCanvas = $('#wetChart').get(0).getContext('2d')
        var wetBarChart = new Chart(wetChartCanvas)
        wetBarChartData.datasets[0].fillColor = '#00a65a'
        wetBarChartData.datasets[0].strokeColor = '#00a65a'
        wetBarChartData.datasets[0].pointColor = '#00a65a'
        var wetBarChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        }

        wetBarChartOptions.datasetFill = false
        wetBarChart.Bar(wetBarChartData, wetBarChartOptions)


        //-------------------
        //- BAR CHART PM2.5 -
        //-------------------
        var pmBarChartData = {
            labels: @Html.Raw(dateJson),
            datasets: [
                {
                    label: '湿度',
                    fillColor: 'rgba(210, 214, 222, 1)',
                    strokeColor: 'rgba(210, 214, 222, 1)',
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: @Html.Raw(pm25Json)
                }
            ]
        }


        var pmChartCanvas = $('#pm25Chart').get(0).getContext('2d')
        var pmBarChart = new Chart(pmChartCanvas)

        var pmBarChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        }

        pmBarChartOptions.datasetFill = false
        pmBarChart.Bar(pmBarChartData, pmBarChartOptions)
    })
</script>